{"version":3,"sources":["remedata.js"],"names":[],"mappings":"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","file":"remedata.js","sourcesContent":["// #### Remedata.js - easy Express middle-ware to provide json web-services with mock data-access\n// ##### v 1.0.1 - Documentation generated with the lovely [Docco](http://jashkenas.github.com/docco/)\n// \n// > Copyright (c) 2012-2015 Iwan van der Kleijn\n// > All rights reserved.\n//\n// > This source code is licensed under the BSD-style license found in the LICENSE file in the root directory of this source tree.\n// \n// Be aware that Remedata is written in ECMAScript 6 (2015). If to be executed in an ECMAScript 5 compatible run-time, you´ll need\n// [Babel](http://babeljs.io) to compile, or transpile, the source files (in src) to their transformed target files (in dist).\n// For an excellent overview of ES6 see: [https://babeljs.io/docs/learn-es6/](https://babeljs.io/docs/learn-es6/)\n//   \n// ##### Other files included in Remedata\n// Json DB module [jsondb.html](jsondb.html). \n// Example: [app.html](app.html)\n\n// ##### Begin remedata.js source\n\n// Import standard ES6 API\nimport * as corejs from 'core-js';\n// Publish public interface of jsondb as part of remedata\nimport {isNone} from './jsondb';\nexport * from './jsondb';\n\n// Represents HTTP return codes (i.e. 200 OK, 404 Not Found etc)\nexport class Status {\n\n  // constructor (Error code: number), (error message: string), (auxiliary data: any): void\n  constructor(code, message, data){\n    this.code = code;\n    this.message = message;\n    this.data = data || null;\n  }\n\n  // ES6 Property Read syntax\n  get Code (){\n    return this.code;\n  }\n  \n  get Message() {\n    return this.message;\n  }\n  // Auxiliary payload\n  get Data() {\n    return this.data;\n  }\n}\n\n// Known HTTP Status codes. OK\nStatus.OK = function(data) {\n  return new Status(200, \"OK\", data);\n};\n\nStatus.NOTFOUND = function(data){\n  return new Status(404, \"Not found\", data);\n}\n\n// Generic HTTP error code (the infamous '500')\nStatus.ERROR = function(message, data){\n  return new Status(500, message, data);\n};\n\n// Utility function to encapsulate server response or, if given a handler,\n// delegate the response to the handler function.\n// response (Exception: Error), (data: mixed [Status | Object]), (request: express.req), (response: express.res), (callback: function): void\nlet response = function(err, data, req, res, callback){\n\n  // Short-circuit execution if a callback handler is provided: delegate to this function\n  if (callback){\n    callback(err, data, req, res);\n  } else {\n    // Respond with HTTP 500 and custom error message in case of an error\n    if(err){\n      res.status(500).send(err.message);\n    } else{\n\n      // If 'data' contains a Status object, this will be send to the client, otherwise\n      if(data instanceof Status){\n        // Send an HTTP statuscode  \n        res.status(data.Code).send(data.Message);\n      } else {\n        // the data is send as a JSON payload\n        res.json(data);\n      }\n    }\n  }\n};\n\n// get Url metadata; urlInfo (express.req): object\nlet urlInfo = function(req){\n  let isAll = req.url.endsWith('/');\n  let parts = req.url.split('/');\n  let id = parts[parts.length-1];\n  return {isAll, parts, id};\n};\n\n// Returns Express handler for GET requests\n// handleGET (table instance: jsondb.JsonDb), (callback handler: function) : void\nexport let handleGET = function(db, callback){\n\n  return function(req, res){\n\n    // Get url data, obtain variables through 'destructuring' of the returned object\n    //See: [Destructuring assignment](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment)\n    let {isAll, parts, id} = urlInfo(req);\n\n    // If url denotes a collection (i.e.: 'path/') treat it like such        \n    if(isAll) {\n      // Retrieve all items from the table\n      db.getAll((err, data)=>{\n        \n        response(err, data, req, res, callback);\n      });\n    } else {\n      // In case of a path with an id, denoting a singular item, i.e. 'path/id', retreive the item by said id\n      db.getBy(id,(err, data)=>{\n        if(!data){\n          // Respond with HTTP 404 if no item with such id is present in the table\n          response(err, Status.NOTFOUND(id), req, res, callback);\n        }else{\n          \n          response(err, data, req, res, callback);\n        }\n      });\n    }\n  };\n};\n\n// Returns Express handler for PUT requests.\nexport let handlePUT = function(db, callback){\n\n  return function(req, res){\n\n    let {isAll, parts, id} = urlInfo(req);\n    let data = req.body;\n\n    // Unlike handleGet, handlePUT (as well as POST and DELETE) pass control to a possible delegate *before* \n    // accesing the table. THis offers the modification of the send/uploaded data before writing to the database file.\n    // The callback handler, if set, *MUST* return the data as the return value\n    if (callback) {\n      data = callback({id, data, url: req.url, isCollection: isAll}, req, res);\n      \n      if (isNone(data)){\n        // Fatal error if the callback handler did not return the data\n        response(new Error('No data returned from Handle'), null, req, res);\n        return;\n      }\n    }\n\n    // In case of a PUT it MUST be an item whitih an id        \n    if(isAll) {\n      response(new Error(\"Cannot PUT to collection without id\"), null, req, res, callback);\n    } else {\n\n      // Furthermore, it is not allowed to write to the whole collections. \n      if (data instanceof Array){\n        response(new Error(\"Cannot PUT an array to collection\"), null, req, res);\n        return;\n      }\n\n      // Set the id on the data object and store the item to the database table\n      data[db.Id] = id;\n      db.save(data,(err)=>{\n        response(err, Status.OK(data), req, res);\n      });\n    }\n  };\n};\n\n// Returns Express handler for DELETE requests. \nexport let handleDELETE = function(db, callback){\n\n  return function(req, res){\n\n    let {isAll, parts, id} = urlInfo(req);\n    \n    if (callback) {\n      // Unlike the PUT and POST callbacks, the DELETE handler must return a potentially modifued id\n      // which will be used to delete an item. If none is set, a fatal error will occur.\n      id = callback({id, url: req.url, isCollection: isAll}, req, res);\n      if (isNone(id)){\n        response(new Error('No id returned from Handle'), null, req, res);\n        return;\n      }\n    }\n\n    if(isAll) {\n      response(new Error(\"Cannot DELETE from an collection without id\"), null, req, res, callback);\n    } else {\n      \n      db.deleteBy(id,(err, deleted)=>{\n\n        if (deleted){\n          response(err, Status.OK(id), req, res);\n        } else {\n          response(err, Status.NOTFOUND(id), req, res);\n        }\n      });\n    }\n  };\n};\n\n\n// Returns Express handler for POST requests.\nexport let handlePOST = function(db, preprocess, callback){\n\n  return function(req, res){\n\n    let {isAll, parts, id} = urlInfo(req);\n    let data = req.body;\n\n    if (callback) {\n      data = callback({id, data, url: req.url, isCollection: isAll}, req, res);\n      if (isNone(data)){\n        response(new Error('No data returned from Handle'), null, req, res);\n        return;\n      }\n    }\n\n    // Although a write operation akin to PUT, the semantics of POST differ in the following ways:\n    // The url must represent a plurar or collection (i.e. 'path/'). The request can reporesent:\n    // - an array send in the body of the request will replace (overwrite) the existing table\n    // - an item send with an id will insert/replace an item \n    if(isAll) {\n      if (data instanceof Array){\n        db.saveAll(data, (err)=> {\n          response(err, Status.OK({data, id, url: req.url, isCollection: isAll}), req, res);\n        });\n      } else {\n        if (!(data[db.Id])){\n          // Fatal error if no id is set on the item. This is a demonstration of the new \n          // [ES6 'template strings'](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/template_strings), \n          // which support 'string interpolation' (variable substitution).\n          response(new Error(`No key '${db.Id}' set on data-item`), null, req, res);\n        } else {\n          db.save(data, (err)=> {\n            response(err, Status.OK({data, id, url: req.url, isCollection: isAll}), req, res);\n          });\n        }\n      }\n    } else {\n      // Fatal error in case the url denotes an item (use PUT in that case)\n      response(new Error(\"Cannot POST to single item\"), null, req, res);\n    }\n  };\n};\n\nlet notify = function(err, data, responsetopic, con, callback){\n\n  console.log('notify:', data, responsetopic); \n  // Short-circuit execution if a callback handler is provided: delegate to this function\n  if (callback){\n    callback(err, data, responsetopic, callback);\n  } else {\n    // Respond with error message in case of an error\n    if(err){\n      con.send('bus.error', {state:\"error\", data:err.message});\n    } else{\n      con.send(responsetopic, data);\n    }\n  }  \n};\n\nclass State {\n\n  constructor(state, data){\n    this.state = state;\n    this.data = data;\n  }\n\n  get State() {\n    return this.state;\n  }\n\n  get Data(){\n    return this.data;\n  }\n}\n\n// nodata\nlet state = function(s, data){\n  return new State(s, data);\n};\n\n// Returns Sews handler for \"request for read\" messages\n// handleWsRead (table instance: jsondb.JsonDb), responsetopic: string, (callback handler: function) : void\nexport let handleWsRead = function(db, responsetopic, callback){\n\n  return function(data, con){\n    if(!(data &&  data[db.Id])) {\n      \n      // Retrieve all items from the table\n      db.getAll((err, data)=>{\n        notify(err, data, responsetopic, con, callback);\n      });\n    } else {\n      console.log(\"before retreiving id\", data);\n      // In case of a data-object with an id, denoting a singular item, i.e. 'data.id', retreive the item by said id\n      db.getBy(data[db.Id],(err, data)=>{\n        if(!data){\n\n          notify(err, state('nodata'), responsetopic, con, callback);\n        }else{\n          \n          notify(err, data, responsetopic, con, callback);\n        }\n      });\n    }\n  };\n};\n\n\n// Returns Sews handler for \"request for write\" messages\n// handleWsWrite(table instance: jsondb.JsonDb), responsetopic: string, (callback handler: function) : void\nexport let handleWsWrite = function(db, responsetopic, callback){\n                             \n  return function(data, con){\n\n    console.log('handleWsWrite', data);\n\n    if (callback) {\n      data = callback(db, responsetopic, data, con);\n      \n      if (isNone(data)){\n        // Fatal error if the callback handler did not return the data\n        notify(new Error('No data returned from Handle'), null,  responsetopic, con);\n        return;\n      }\n    }\n    \n    // In case of a write it MUST be an item whitih an id        \n    if(!(data && data[db.Id])) {\n      notify(new Error(\"Cannot write to collection without id\"), null,  responsetopic, con);\n    } else {\n      \n      // Furthermore, it is not allowed to over-write the whole collections. \n      if (data instanceof Array){\n        notify(new Error(\"Cannot write an array to collection\"), null, responsetopic, con);\n        return;\n      }\n\n      // Set the id on the data object and store the item to the database table\n      db.save(data,(err)=>{\n        notify(err, state(\"data.written\",  data[db.Id]), responsetopic, con);\n      });\n    }\n  };\n};\n\n// Returns Sews handler for \"request for process\" messages\n// handleWsProcess(table instance: jsondb.JsonDb), responsetopic: string, (callback handler: function) : void\nexport let handleWsProcess = function(db, responsetopic, callback){\n\n  return function(data, con){\n\n    console.log('handleWsProcess', data);\n\n    if (callback) {\n      data = callback(db, responsetopic, data, con);\n      \n      if (isNone(data)){\n        // Fatal error if the callback handler did not return the data\n        notify(new Error('No data returned from Handle'), null,  responsetopic, con);\n        return;\n      }\n    }\n    \n    // Over-write who collection\n    if (data instanceof Array){\n      db.saveAll(data, (err)=> {\n        notify(err, data, responsetopic, con);\n      });\n    } else {\n      \n      if (!(data && data[db.Id])){\n        // Fatal error if no data or no id is set on the item. This is a demonstration of the new \n        notify(new Error('No data or no key on data-item'), null, responsetopic, con);\n      } else {\n        db.save(data, (err)=> {\n          notify(err, data, responsetopic, con);\n        });\n      }\n    }\n  };\n};\n\n\n// Returns Sews handler for \"request for delete\" messages\n// handleWsDelete(table instance: jsondb.JsonDb), responsetopic: string, (callback handler: function) : void\nexport let handleWsDelete = function(db, responsetopic, callback){\n\n  return function(id, con){\n\n    console.log('handleWsDelete', data);\n\n    if (callback) {\n      id = callback(db, responsetopic, id, con);\n    }   \n    if (isNone(id)){\n      // Fatal error if the callback handler did not return the id\n      notify(new Error('No key set'), null,  responsetopic, con);\n    }  else {\n      db.delete(id, (err)=> {\n        notify(err, data, responsetopic, con);\n      });\n    }\n  };\n};\n\n"],"sourceRoot":"/source/"}