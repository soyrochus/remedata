{"version":3,"sources":["wsapp.js"],"names":[],"mappings":";;;;;;;;;;;oBAOsB,MAAM;;IAAhB,IAAI;;sBACQ,SAAS;;IAArB,MAAM;;wBACQ,YAAY;;IAA1B,QAAQ;;;AAGpB,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;;AAEzD,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,CAAC,CAAC;AACrC,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC,CAAC;AAC/D,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC,aAAa,CAAC,EAAE,EAAC,aAAa,CAAC,CAAC,CAAC;AAC9D,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,eAAe,CAAC,EAAE,EAAC,eAAe,CAAC,CAAC,CAAC;AACpE,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC,cAAc,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC","file":"wsapp.js","sourcesContent":["// > Copyright (c) 2012-2015 Iwan van der Kleijn\n// > All rights reserved.\n//\n// > This source code is licensed under the BSD-style license found in the LICENSE file in the root directory of this source tree\n// \n// This file is part of [Remedata](remedata.html)\n\nimport * as sews from 'sews'\nimport * as corejs from 'core-js';\nimport * as remedata from './remedata';\n\n// create json db from file with property 'id' as key\nlet db = remedata.jsondb(\"data/_data.json\", {key: \"id\"});\n\nlet bus = sews.startbus({port:9000});\nbus.on('men.read', remedata.handleWsRead(db, 'men.retrieved'));\nbus.on('men.write', remedata.handleWsWrite(db,'men.written'));\nbus.on('men.process', remedata.handleWsProcess(db,'men.processed'));\nbus.on('men.delete', remedata.handleWsDelete(db, 'men.deleted'));\n\n\n/* (data, con)=> {\n  console.log('server received \"men.read\":', data);\n  con.send('men.changed',\"Send from Server\");\n  con.send('nahahahaha', \"Send from Server as well\");\n});\n\n\nbus.on('bus.error', (error) => {\n  console.log('server error: ', error);\n});\nbus.on('bus.unknown', (data) => {\n  console.log('server unkown message: ', data);\n}); \n\nlet counter = 0;\n\nlet client = sews.connect('ws://localhost:8080', ()=>{\n  counter++;\n  client.send('men.read', \"givemedata: \" + counter);\n  //client.send('men.meep', \"givemedataaswell\");\n});\n\nclient.on('men.changed', (data, con)=>{\n  console.log('client received \"men.changed\"', data);\n  counter++;\n  client.send('men.read', \"givemedata: \" + counter);\n});\n\nclient.on('bus.error', (error) => {\n  console.log('Client error:', error);\n});\n\nclient.on('bus.unknown', (data) => {\n  console.log('client unkown message: ', data);\n}); \n*/"],"sourceRoot":"/source/"}