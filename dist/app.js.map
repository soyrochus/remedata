{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["// > Copyright (c) 2012-2015 Iwan van der Kleijn\n// > All rights reserved.\n//\n// > This source code is licensed under the BSD-style license found in the LICENSE file in the root directory of this source tree\n// \n// This file is part of [Remedata](remedata.html)\n// It is a demo of how Remedata can be used. \n// The application consists of a standard Express 4.* application. Instead of defining function callbacks directly on the \n// Express app routing methods (get, post etc.), a handl \n\n// Import standard ES6 API\nimport * as corejs from 'core-js';\nimport express from 'express';\nimport * as bodyParser from 'body-parser';\nimport * as remedata from './remedata';\n\nconst app = express();\n// for parsing application/json\napp.use(bodyParser.json()); \n\n// create json db from file with property 'id' as key\nlet db = remedata.jsondb(\"data/_data.json\", {key: \"id\"});\n\n// define default GET handler; retrieves data from given db\n// If the url refers to a plural or collection, i.e. 'path/', the while json file is returned,\n// If the url refers to an id, i.e. 'path/id', a single item with given id is returned\napp.get('/men/*', remedata.handleGET(db));\n\n// Define GET handler with callback which is called *after* db retrieval\n// Parameter 'data' contains the content of the specific resoure\n// In case the callback is given, it is expected that the code returns data to the called\n// The return value of the handler has no effect on the further processing of the request\napp.get('/hombres/*', remedata.handleGET(db,function(err, data, req, res){\n   let result;\n   if (data instanceof Array){                        \n      result = data.map((e)=> {\n        e.beard = true;\n        return e;\n      });\n   }\n   else {\n     data.beard = true;\n     result = data;\n   }\n   res.json(result);\n}));\n\n// Define default PUT handler; writes data with given id in url, i.e. 'path/id'. Existing items are over-written\n// Data should be passed as json formatted data in the request body with content-type 'application/json' \napp.put('/men/*', remedata.handlePUT(db));\n\n// Define PUT handler with callback which is called *before* db write\n// PUT handlers (like POST and DELETE) MUST return modified data as the function result \n// if not, it would not be usefull to define the handler anyway\napp.put('/hombres/*', remedata.handlePUT(db,function(data, req, res){\n\n   let modified;                        \n   if (data instanceof Array){                        \n      modified = data.map((e)=> {\n        e.beard = true;\n        return e;\n      });\n   }\n   else {\n     data.beard = true;\n     modified = data;\n   }\n\n  return modified;\n}));\n\n// Define default POST handler;\n// Data should be passed as json formatted data in the request body with content-type 'application/json' \n// If the url refers to a plural or collection, i.e. 'path/', the while json file is written to de db (data should be an array)\napp.post('/men/*', remedata.handlePOST(db));\n\n// Define PUT handler with callback which is called *before* db write.\n// Rules for return value of the handle are like those for the PUT handler\napp.post('/hombres/*', remedata.handlePOST(db,function(data, req, res){\n  data.beard = true;\n  return data;\n}));\n\n// Define DELETE handler; deletes data with given id in url, i.e. 'path/id'. \napp.delete('/men/*', remedata.handleDELETE(db));\n\n// Define PUT handler with callback which is called *before* db write\n// Return value is the actual id of the item to be deleted, but for the remainder \n// the rules for return value of the handle are like those for the PUT handler\napp.delete('/hombres/*', remedata.handleDELETE(db,function(id, req, res){\n   console.log('DELETE:',id);\n   return (id + 1);\n}));\n\n// Start test server on port 3000; not needed for Remedata itself\nlet server = app.listen(3000, function () {\n\n  let host = server.address().address;\n  let port = server.address().port;\n\n  console.log('Remedata listening at http://%s:%s', host, port);\n\n});\n"],"sourceRoot":"/source/"}